language: cpp

before_install:
  # Set default version of Python to 3: some Conan packages require this.
  - pyenv global 3.7
install:
  # Install Conan using Python 3. Fail if we have the wrong Python.
  - python --version | grep 3
  - pip --version | grep -E 'python\s*3'
  - pip install conan cmake
  # Fail if we can't run Conan.
  - conan --version

jobs:
  include:
    - os: osx
      compiler: clang
      osx_image: xcode11.2
      env:
        - MACOSX_DEPLOYMENT_TARGET=10.14
        - MATRIX_EVAL=""
      before_install:
        # pyenv doesn't exist on this CI image, so use virtualenv to set Python version
        - pip3 install virtualenv
        - virtualenv -p python3 ~/venv
        - source ~/venv/bin/activate

    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - GCC_VER="10"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # I couldn't get ${GCC_VER} in here successfully
            - gcc-10
            - g++-10
            - doxygen
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}
    - os: linux
      dist: bionic
      compiler: clang
      before_script:
        # Add LLVM repo and GPG key before installing clang-10
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main" | sudo tee -a /etc/apt/sources.list
        - sudo apt-get -qq update
        - sudo apt-get -y install clang-10
        - eval "${MATRIX_EVAL}"
      env:
        - CLANG_VER="10"
        - MATRIX_EVAL="CC=clang-${CLANG_VER} && CXX=clang++-${CLANG_VER}"
      addons: { apt: { packages: ['doxygen'] } }


before_script:
  - eval "${MATRIX_EVAL}"

script:
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE .
  - cmake --build . -- -j2
  - ctest -j2
